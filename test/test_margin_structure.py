# coding: utf-8

"""
    Preorder Margin API

    API for estimating trade margins for orders

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.margin_structure import MarginStructure

class TestMarginStructure(unittest.TestCase):
    """MarginStructure unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarginStructure:
        """Test MarginStructure
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarginStructure`
        """
        model = MarginStructure()
        if include_optional:
            return MarginStructure(
                before = [
                    openapi_client.models.margin_structure_component.MarginStructureComponent(
                        asset = '', 
                        asset_type = 'regular', 
                        position = 1.337, 
                        price = 1.337, 
                        currency = '', 
                        crossrate = 1.337, 
                        leverage_rate = 1.337, 
                        margin = 1.337, 
                        conv_margin = 1.337, 
                        extreme_margin = 1.337, 
                        conv_extreme_margin = 1.337, 
                        effective_qtty = 1.337, )
                    ],
                after = [
                    openapi_client.models.margin_structure_component.MarginStructureComponent(
                        asset = '', 
                        asset_type = 'regular', 
                        position = 1.337, 
                        price = 1.337, 
                        currency = '', 
                        crossrate = 1.337, 
                        leverage_rate = 1.337, 
                        margin = 1.337, 
                        conv_margin = 1.337, 
                        extreme_margin = 1.337, 
                        conv_extreme_margin = 1.337, 
                        effective_qtty = 1.337, )
                    ]
            )
        else:
            return MarginStructure(
        )
        """

    def testMarginStructure(self):
        """Test MarginStructure"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
